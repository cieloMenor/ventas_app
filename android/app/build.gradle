// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// android {
//     namespace = "com.example.ventas_app"
//     compileSdk = flutter.compileSdkVersion
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility = JavaVersion.VERSION_1_8
//         targetCompatibility = JavaVersion.VERSION_1_8
//     }

//     kotlinOptions {
//         jvmTarget = JavaVersion.VERSION_1_8
//     }

//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId = "com.example.ventas_app"
//         // You can update the following values to match your application needs.
//         // For more information, see: https://flutter.dev/to/review-gradle-config.
//         minSdk = flutter.minSdkVersion
//         targetSdk = flutter.targetSdkVersion
//         versionCode = flutter.versionCode
//         versionName = flutter.versionName
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig = signingConfigs.debug
//         }
//     }
// }

// flutter {
//     source = "../.."
// }

//con modificaciones ------------------------------------------------------------

// plugins {
//     id "com.android.application"
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// android {
//     namespace = "com.example.ventas_app"
//     compileSdk = flutter.compileSdkVersion
//     ndkVersion = flutter.ndkVersion

//     compileOptions {
//         sourceCompatibility = JavaVersion.VERSION_1_8
//         targetCompatibility = JavaVersion.VERSION_1_8
//     }

//     kotlinOptions {
//         jvmTarget = JavaVersion.VERSION_1_8
//     }

//     defaultConfig {
//         applicationId = "com.example.ventas_app"
//         minSdk = flutter.minSdkVersion
//         targetSdk = flutter.targetSdkVersion
//         versionCode = flutter.versionCode
//         versionName = flutter.versionName
//     }

//     signingConfigs {
//         release {
//             // Configuración de la ubicación del keystore y contraseñas
//             if (project.hasProperty('KEYSTORE_PASSWORD')) {
//                 storeFile file("C:/keystores/my-release-key.keystore") // Ruta del archivo keystore
//                 storePassword project.KEYSTORE_PASSWORD // Contraseña del keystore
//                 keyAlias project.KEY_ALIAS // Alias de la clave
//                 keyPassword project.KEY_PASSWORD // Contraseña de la clave
//             }
//         }
//     }

//     buildTypes {
//         release {
//             // Usar la configuración de firma definida
//             signingConfig signingConfigs.release
//             minifyEnabled false
//             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//         }
//     }
// }

// flutter {
//     source = "../.."
// }

//despues del error

plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.ventas_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.example.ventas_app"
        minSdkVersion flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            // Configuración de la ubicación del keystore y contraseñas
            if (project.hasProperty('KEYSTORE_PASSWORD') && project.hasProperty('KEY_ALIAS') && project.hasProperty('KEY_PASSWORD')) {
                storeFile file("C:/keystores/my-release-key.keystore") // Ruta del archivo keystore
                storePassword project.KEYSTORE_PASSWORD // Contraseña del keystore
                keyAlias project.KEY_ALIAS // Alias de la clave
                keyPassword project.KEY_PASSWORD // Contraseña de la clave
            }
        }
    }

    buildTypes {
         release {
             // TODO: Add your own signing config for the release build.
             // Signing with the debug keys for now, so `flutter run --release` works.
             minifyEnabled true  // Habilita la minificación del código
            shrinkResources true  // Elimina los recursos no utilizados
             signingConfig = signingConfigs.release
        }
    }

    // buildTypes {
    //     release {
    //         // Usar la configuración de firma definida
    //         signingConfig signingConfigs.release

    //         // Habilitar el shrinking de código y recursos
    //         minifyEnabled true   // Habilita el shrinking de código
    //         shrinkResources true // Elimina los recursos no utilizados

    //         // Archivos de reglas de ProGuard (asegúrate de tener este archivo)
    //         proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    //     }
    // }
}

flutter {
    source = "../.."
}


